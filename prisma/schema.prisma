generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model House {
  id        Int     @id @default(autoincrement())
  name      String
  bannerUrl String
  bannerAlt String?
  realm     String?
  slogan    String?
  history   String?

  castles    Castle[]
  characters Character[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("houses")
}

model Character {
  id       Int     @id @default(autoincrement())
  name     String
  imageUrl String?

  actor Actor?

  atributes Atribute[]

  houseId Int
  house   House @relation(fields: [houseId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("characters")
}

model Actor {
  id       Int     @id @default(autoincrement())
  name     String
  imageUrl String?
  age      Int?

  characterId Int       @unique
  character   Character @relation(fields: [characterId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("actors")
}

model Atribute {
  id           Int @id @default(autoincrement())
  strength     Int
  intelligence Int
  agility      Int
  endurance    Int
  perception   Int
  charisma     Int
  luck         Int

  characterId Int
  character   Character @relation(fields: [characterId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("atributes")
}

model Castle {
  id   Int    @id @default(autoincrement())
  name String

  houseId Int?
  house   House? @relation(fields: [houseId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("castles")
}

model Book {
  id          Int     @id @default(autoincrement())
  title       String
  volume      Int?
  releaseYear Int?
  coverUrl    String?
  coverAlt    String?
  synopsis    String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("books")
}
